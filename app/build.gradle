apply plugin: 'com.android.application'

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion project.ext.buildToolsVersion

    defaultConfig {
        applicationId "ie.macinnes.tvheadend"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        versionCode System.getenv("APP_VERSION_CODE") as Integer ?: 0
        versionName project.ext.gitVersionName

        setProperty("archivesBaseName", applicationId)

        buildConfigField "boolean", "ACRA_ENABLED", "false"
        buildConfigField "String", "ACRA_REPORT_URI", "\"\""
    }

    signingConfigs {
        if (rootProject.file("keystore.properties").exists()) {
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(rootProject.file("keystore.properties")))

            release {
                storeFile new File(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-SNAPSHOT"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (signingConfigs.hasProperty("release")) {
                signingConfig signingConfigs.release
            }

            if (rootProject.file("acra.properties").exists()) {
                buildConfigField "boolean", "ACRA_ENABLED", "true"
                def acraProperties = new Properties()
                acraProperties.load(new FileInputStream(rootProject.file("acra.properties")))
                buildConfigField "String", "ACRA_REPORT_URI", "\"" + acraProperties.report_uri + "\""
            }
        }
    }

    productFlavors {
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile 'ie.macinnes.htsp:android-htsp:v0.0.1a4'
    //compile(name: 'library-release', ext: 'aar')
    // Used for testing local HTSP lib builds
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // compile(name: 'vlc-android-sdk-release', ext: 'aar') // Used for testing local libvlc builds
    compile 'com.android.support:support-v4:25.1.1'
    compile 'com.android.support:leanback-v17:25.1.1'
    compile 'com.android.support:preference-leanback-v17:25.1.1'
    compile 'com.google.android.exoplayer:exoplayer:r2.1.1k3'
    compile 'com.google.android.exoplayer:extension-ffmpeg:r2.1.1k3'
    // compile(name: 'library-release', ext: 'aar') // Used for testing local exoplayer builds
    // compile(name: 'extension-ffmpeg-release', ext: 'aar') // Used for testing local exoplayer-ffmpeg builds
    compile 'de.mrmaffen:vlc-android-sdk:1.9.8'
    compile 'ch.acra:acra:4.9.1'
}
